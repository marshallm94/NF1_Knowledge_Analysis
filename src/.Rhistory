theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("Employment Status") +
ylab("Proportion")
result <- table(grand.data$employment_status)
knitr::kable(result,
caption = "What is your employment status?",
col.names = c('Response','Count'))
grand.data$gender <- sub("^$", "Unknown", grand.data$gender)
ggplot(grand.data, aes(gender,
fill = gender)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("Gender") +
ylab("Proportion")
result <- table(grand.data$gender)
knitr::kable(result,
caption = "Gender",
col.names = c('Response','Count'))
grand.data$ethnicity <- sub("^$", "Unkown", grand.data$ethnicity)
ggplot(grand.data, aes(ethnicity,
fill = ethnicity)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("Ethnicity") +
ylab("Proportion")
result <- table(grand.data$ethnicity)
knitr::kable(result,
caption = "Ethnicity",
col.names = c('Response \t','Count'))
cols = c("does_your_oldest_child_see_a_neurologist_for_nf_care.",
"does_your_oldest_child_see_an_oncologist_for_nf_care.",
"does_your_oldest_child_see_a_geneticist_for_nf_care.",
"does_your_oldest_child_see_an_ent.audiologist_for_nf_care.",
"does_your_oldest_child_see_a_pediatrician_for_nf_care.",
"does_your_oldest_child_see_a_dermatologist_for_nf_care.",
"mode_of_inheritance")
grand.data$mode_of_inheritance <- ifelse(grand.data$does_your_childs_other_parent_have_nf1. == "No" & grand.data$do_you_have_nf1. == "No", "De Novo", "Inherited")
display.df <- grand.data %>%
group_by(mode_of_inheritance) %>%
summarise(Neurologist = sum(does_your_oldest_child_see_a_neurologist_for_nf_care.),
Oncologist = sum(does_your_oldest_child_see_an_oncologist_for_nf_care.),
Geneticist = sum(does_your_oldest_child_see_a_geneticist_for_nf_care.),
Audiologist = sum(does_your_oldest_child_see_an_ent.audiologist_for_nf_care.),
Pediatrician = sum(does_your_oldest_child_see_a_pediatrician_for_nf_care.),
Dermatologist = sum(does_your_oldest_child_see_a_pediatrician_for_nf_care.)
)
df.d <- melt(display.df, id.vars='mode_of_inheritance')
ggplot(df.d, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = 'identity') +
facet_grid(~mode_of_inheritance) +
geom_text(aes(y = value, label = value),
vjust = -0.25,
size = 3) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = 'none',
axis.title.x = element_blank()) +
ggtitle("What specialists does your affected child see?",
"Faceted by mode of inheritance") +
ylab("Count")
ggplot(grand.data, aes(how_often_does_your_.oldest._child_see_an_nf_doctor.,
fill = how_often_does_your_.oldest._child_see_an_nf_doctor.)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("How often does your oldest child see a NF1 doctor?") +
ylab("Proportion")
result <- table(grand.data$how_often_does_your_.oldest._child_see_an_nf_doctor.)
knitr::kable(result,
caption = "How often does your oldest child see a NF1 doctor?",
col.names = c('Response \t','Count'))
display.df <- grand.data %>%
group_by(how_often_does_your_.oldest._child_see_an_nf_doctor.) %>%
summarise(mean_score = mean(score))
df.d <- melt(display.df, id.vars='how_often_does_your_.oldest._child_see_an_nf_doctor.')
ggplot(df.d, aes(x = how_often_does_your_.oldest._child_see_an_nf_doctor., y = value, fill = how_often_does_your_.oldest._child_see_an_nf_doctor.)) +
geom_bar(stat = 'identity') +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(y = value, label = round(value*100, 2)),
vjust = -0.25,
size = 3) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = 'none',
axis.title.x = element_blank()) +
ggtitle("How often does your oldest child see a NF1 doctor?") +
ylab("Mean Quiz Score")
ggplot(grand.data, aes(have_you_ever_met_with_a_genetic_counselor.,
fill = have_you_ever_met_with_a_genetic_counselor.)) +
geom_bar(aes(y = (..count..))) +
facet_grid(~mode_of_inheritance) +
geom_text(aes(y = (..count..),
label = (..count..)),
stat = "count",
vjust = -0.25) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("Have you ever met with a Genetic Counselor?",
"Faceted by mode of inheritance") +
ylab("Count")
ggplot(grand.data, aes(how_would_you_describe_the_severity_of_symptoms_of_your_.oldest._child_with_nf1.,
fill = how_would_you_describe_the_severity_of_symptoms_of_your_.oldest._child_with_nf1.)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("How would you describe the severity of symptoms of your oldest child with NF1?") +
ylab("Proportion")
result <- table(grand.data$how_would_you_describe_the_severity_of_symptoms_of_your_.oldest._child_with_nf1.)
knitr::kable(result,
caption = "How would you describe the severity of symptoms of your oldest child with NF1?",
col.names = c('Response \t','Count'))
colnames(grand.data)
range(grand.data$age)
grand.data$age
class(grand.data$age)
mean(grand.data$age)
?range
mean(grand.data$age, na.rm = TRUE)
is.na(grand.data$age)
age.range <- range(grand.data$age, na.rm = TRUE)
age.mean <- mean(grand.data$age, na.rm = TRUE)
age.sd <- sd(grand.data$age, na.rm = TRUE)
dim(grand.data)
303 - 11 - 1 - 14
# set global options
knitr::opts_chunk$set(echo = FALSE,
eval = TRUE)
# load packages
suppressPackageStartupMessages(library(ggplot2))
suppressPackageStartupMessages(library(dplyr))
suppressPackageStartupMessages(library(data.table))
suppressPackageStartupMessages(library(ltm))
# load data
grand.data <- read.csv("/Users/marshallmcquillen/Data_Science/NF1_Thesis/data/grand_data.csv")
# original significance level
alpha <- 0.05
# Bonferroni Correction
adj.alpha <- alpha / 4
# create subsets on whether respondent has seend a genetic counselor
grand.data$seen_gc <- grand.data$have_you_ever_met_with_a_genetic_counselor.
seen.gc <- subset(grand.data,
seen_gc == "Yes")
not.seen.gc <- subset(grand.data,
seen_gc == "No")
# create subsets based on whether the respondent has NF1
group.a <- subset(grand.data, group_id == "Group A")
group.b <- subset(grand.data, group_id == "Group B")
group.c <- subset(grand.data, group_id == "Group C")
summary.df <- data.frame(Mean = c(mean(group.a$score),
mean(group.b$score),
mean(group.c$score)),
StandardDeviation = c(sd(group.a$score),
sd(group.b$score),
sd(group.c$score)))
rownames(summary.df) <- c('Group A','Group B','Group C')
age.range <- range(grand.data$age, na.rm = TRUE)
age.mean <- mean(grand.data$age, na.rm = TRUE)
age.sd <- sd(grand.data$age, na.rm = TRUE)
knitr::kable(summary.df,
caption = "Test Score Statistics")
# welch's t-test
test.1.results <- t.test(group.a$score, group.b$score, var.equal = FALSE, alternative = 'two.sided')
test.1.data <- rbind.data.frame(group.a, group.b)
subtitle <- paste("Mean's of each group displayed as vertical lines: Group A =", round(mean(group.a$score), 4), "|", "Group B =", round(mean(group.b$score), 4))
ggplot(test.1.data, aes(score, fill = group_id)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = mean(group.a$score), color = '#F8766D') +
geom_vline(xintercept = mean(group.b$score), color = '#00BFC4') +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
ggtitle("Group A vs. Group B",
subtitle = subtitle) +
xlab("Test Score") +
ylab("Density")
print(paste("Test 1 p value =", test.1.results$p.value))
# welch's t-test
test.2.results <- t.test(group.a$score, group.c$score, var.equal = FALSE, alternative = 'greater')
test.2.data <- rbind.data.frame(group.a, group.c)
subtitle <- paste("Mean's of each group displayed as vertical lines: Group A =", round(mean(group.a$score), 4), "|", "Group C =", round(mean(group.c$score), 4))
ggplot(test.2.data, aes(score, fill = group_id)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = mean(group.a$score), color = '#F8766D') +
geom_vline(xintercept = mean(group.c$score), color = '#00BFC4') +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
ggtitle("Group A vs. Group C",
subtitle = subtitle) +
xlab("Test Score") +
ylab("Density")
print(paste("Test 2 p value =", test.2.results$p.value))
# welch's t-test
test.3.results <- t.test(group.b$score, group.c$score, var.equal = FALSE, alternative = 'greater')
test.3.data <- rbind.data.frame(group.b, group.c)
subtitle <- paste("Mean's of each group displayed as vertical lines: Group B =", round(mean(group.b$score), 4), "|", "Group C =", round(mean(group.c$score), 4))
ggplot(test.3.data, aes(score, fill = group_id)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = mean(group.b$score), color = '#F8766D') +
geom_vline(xintercept = mean(group.c$score), color = '#00BFC4') +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
ggtitle("Group B vs. Group C",
subtitle = subtitle) +
xlab("Test Score") +
ylab("Density")
print(paste("Test 3 p value =", test.3.results$p.value))
# welch's t-test
test.4.results <- t.test(seen.gc$score, not.seen.gc$score, var.equal = FALSE,
alternative = 'greater')
test.4.data <- rbind.data.frame(seen.gc, not.seen.gc)
subtitle <- paste("Mean's of each group displayed as vertical lines: Yes =", round(mean(seen.gc$score), 4), "|", "No =", round(mean(not.seen.gc$score), 4))
ggplot(test.4.data, aes(score, fill = seen_gc)) +
geom_density(alpha = 0.5) +
geom_vline(xintercept = mean(seen.gc$score), color = '#F8766D') +
geom_vline(xintercept = mean(not.seen.gc$score), color = '#00BFC4') +
theme(legend.position="bottom") +
theme(legend.title=element_blank()) +
ggtitle("Have you seen a Genetic Counselor?",
subtitle = subtitle) +
xlab("Test Score") +
ylab("Density")
print(paste("Test 4 p value =", test.3.results$p.value))
quiz.questions <- c('one_half_or_50._of_genetic_information_is_passed_down_from_mother_to_child',
'there_is_more_than_one_gene_that_causes_nf1',
'a_father_can_pass_down_an_nf1_gene_mutation_to_his_daughters',
'all_people_who_have_an_nf1_gene_mutation_will_develop_cancer',
'nf1_symptoms_vary_from_one_person_to_another',
'a_person_is_born_with_nf1',
'nf1_can_skip_generations',
'if_a_woman_with_nf1_has_one_child_with_nf1_her_second_child_will_definitely_not_have_nf1',
'people_with_nf1_are_generally_more_likely_to_develop_cancer_at_a_younger_age',
'if_a_woman_with_nf1_has_scoliosis_then_her_child_will_also_develop_scoliosis',
'tumors_in_nf1_can_appear_anywhere_in_the_body',
'people_with_nf1_from_different_families_will_always_have_different_symptoms',
'cafe.au.lait_spots_.brown_marks_on_the_skin._are_often_the_first_sign_that_a_person_has_nf1',
'a_baby_with_nf1_may_be_born_with_a_tumor',
'all_cases_of_nf1_can_be_detected_in_a_womans_pregnancy_by_ultrasound',
'half_of_people_with_nf1_have_a_family_history_of_nf1',
'a_person_with_nf1_can_develop_tumors_that_may_lead_to_vision_loss_or_blindness',
'women_with_nf1_are_at_an_increased_risk_for_breast_cancer',
'is_scoliosis_associated_with_nf1.',
'is_attention_deficit_hyperactivity_disorder_associated_with_nf1.',
'are_clubbed_feet_associated_with_nf1.',
'are_congenital_heart_defects_associated_with_nf1.',
'are_seizures_associated_with_nf1.',
'are_bumps_on_the_skin_associated_with_nf1.',
'are_allergies_associated_with_nf1.',
'is_high_blood_pressure_associated_with_nf1.',
'are_learning_disabilities_associated_with_nf1.',
'are_optic_gliomas_associated_with_nf1.',
'is_infertility_associated_with_nf1.',
'are_lisch_nodules_.dark_spots_on_the_iris._the_colored_part_of_the_eye._associated_with_nf1.',
'is_small_head_size_associated_with_nf1.',
'are_cataracts_associated_with_nf1.',
'how_is_nf1_diagnosed.',
'what_types_of_exams_may_be_helpful_when_trying_to_make_a_diagnosis_of_nf1.',
'what_causes_nf1.',
'what_is_the_function_of_the_nf1_gene_in_the_body.',
'are_men_or_women_more_likely_to_be_affected_by_nf1.',
'how_many_copies_of_a_non.working_nf1_gene_must_one_have_to_be_affected_with_nf1.',
'if_a_person_with_nf1_has_a_child_what_is_the_chance_that_the_child_will_have_nf1.',
'what_is_the_increased_risk_for_a_person_with_nf1_to_develop_cancer_in_their_lifetime_compared_to_someone_without_nf1.',
'during_childhood_what_kind_of_screening_may_be_done_for_optic_gliomas_.eye_tumors..',
'how_do_the_symptoms_of_nf1_change_as_a_person_gets_older.',
'what_is_the_most_concerning_symptom_of_a_tumor_to_suggest_it_has_become_malignant_.cancerous..')
quiz.df <- grand.data[, quiz.questions]
cronbachs <- cronbach.alpha(quiz.df)$alpha
#car::qqPlot(group.a$score)
#car::qqPlot(group.b$score)
#car::qqPlot(group.c$score)
#car::qqPlot(seen.gc$score)
#car::qqPlot(not.seen.gc$score)
ggplot(grand.data, aes(do_you_have_nf1., fill = do_you_have_nf1.)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.position = 'bottom',
legend.title = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("Do you have have NF1?") +
ylab("Proportion")
result <- table(grand.data$do_you_have_nf1.)
knitr::kable(result,
caption = "Do you have NF1?",
col.names = c('Response','Count'))
ggplot(grand.data, aes(have_you_ever_met_with_a_genetic_counselor.,
fill = have_you_ever_met_with_a_genetic_counselor.)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.position = 'bottom',
legend.title = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("Have you ever met with a Genetic Counselor?") +
ylab("Proportion")
result <- table(grand.data$have_you_ever_met_with_a_genetic_counselor.)
knitr::kable(result,
caption = "Have you ever met with a Genetic Counselor?",
col.names = c('Response','Count'))
grand.data$employment_status <- sub("^$", "Unknown", grand.data$employment_status)
ggplot(grand.data, aes(employment_status,
fill = employment_status)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("Employment Status") +
ylab("Proportion")
result <- table(grand.data$employment_status)
knitr::kable(result,
caption = "What is your employment status?",
col.names = c('Response','Count'))
grand.data$gender <- sub("^$", "Unknown", grand.data$gender)
ggplot(grand.data, aes(gender,
fill = gender)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("Gender") +
ylab("Proportion")
result <- table(grand.data$gender)
knitr::kable(result,
caption = "Gender",
col.names = c('Response','Count'))
grand.data$ethnicity <- sub("^$", "Unkown", grand.data$ethnicity)
ggplot(grand.data, aes(ethnicity,
fill = ethnicity)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("Ethnicity") +
ylab("Proportion")
result <- table(grand.data$ethnicity)
knitr::kable(result,
caption = "Ethnicity",
col.names = c('Response \t','Count'))
cols = c("does_your_oldest_child_see_a_neurologist_for_nf_care.",
"does_your_oldest_child_see_an_oncologist_for_nf_care.",
"does_your_oldest_child_see_a_geneticist_for_nf_care.",
"does_your_oldest_child_see_an_ent.audiologist_for_nf_care.",
"does_your_oldest_child_see_a_pediatrician_for_nf_care.",
"does_your_oldest_child_see_a_dermatologist_for_nf_care.",
"mode_of_inheritance")
grand.data$mode_of_inheritance <- ifelse(grand.data$does_your_childs_other_parent_have_nf1. == "No" & grand.data$do_you_have_nf1. == "No", "De Novo", "Inherited")
display.df <- grand.data %>%
group_by(mode_of_inheritance) %>%
summarise(Neurologist = sum(does_your_oldest_child_see_a_neurologist_for_nf_care.),
Oncologist = sum(does_your_oldest_child_see_an_oncologist_for_nf_care.),
Geneticist = sum(does_your_oldest_child_see_a_geneticist_for_nf_care.),
Audiologist = sum(does_your_oldest_child_see_an_ent.audiologist_for_nf_care.),
Pediatrician = sum(does_your_oldest_child_see_a_pediatrician_for_nf_care.),
Dermatologist = sum(does_your_oldest_child_see_a_pediatrician_for_nf_care.)
)
df.d <- melt(display.df, id.vars='mode_of_inheritance')
ggplot(df.d, aes(x = variable, y = value, fill = variable)) +
geom_bar(stat = 'identity') +
facet_grid(~mode_of_inheritance) +
geom_text(aes(y = value, label = value),
vjust = -0.25,
size = 3) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = 'none',
axis.title.x = element_blank()) +
ggtitle("What specialists does your affected child see?",
"Faceted by mode of inheritance") +
ylab("Count")
ggplot(grand.data, aes(how_often_does_your_.oldest._child_see_an_nf_doctor.,
fill = how_often_does_your_.oldest._child_see_an_nf_doctor.)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("How often does your oldest child see a NF1 doctor?") +
ylab("Proportion")
result <- table(grand.data$how_often_does_your_.oldest._child_see_an_nf_doctor.)
knitr::kable(result,
caption = "How often does your oldest child see a NF1 doctor?",
col.names = c('Response \t','Count'))
display.df <- grand.data %>%
group_by(how_often_does_your_.oldest._child_see_an_nf_doctor.) %>%
summarise(mean_score = mean(score))
df.d <- melt(display.df, id.vars='how_often_does_your_.oldest._child_see_an_nf_doctor.')
ggplot(df.d, aes(x = how_often_does_your_.oldest._child_see_an_nf_doctor., y = value, fill = how_often_does_your_.oldest._child_see_an_nf_doctor.)) +
geom_bar(stat = 'identity') +
scale_y_continuous(labels = scales::percent) +
geom_text(aes(y = value, label = round(value*100, 2)),
vjust = -0.25,
size = 3) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = 'none',
axis.title.x = element_blank()) +
ggtitle("How often does your oldest child see a NF1 doctor?") +
ylab("Mean Quiz Score")
ggplot(grand.data, aes(have_you_ever_met_with_a_genetic_counselor.,
fill = have_you_ever_met_with_a_genetic_counselor.)) +
geom_bar(aes(y = (..count..))) +
facet_grid(~mode_of_inheritance) +
geom_text(aes(y = (..count..),
label = (..count..)),
stat = "count",
vjust = -0.25) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("Have you ever met with a Genetic Counselor?",
"Faceted by mode of inheritance") +
ylab("Count")
ggplot(grand.data, aes(how_would_you_describe_the_severity_of_symptoms_of_your_.oldest._child_with_nf1.,
fill = how_would_you_describe_the_severity_of_symptoms_of_your_.oldest._child_with_nf1.)) +
geom_bar(aes(y = (..count..)/sum(..count..))) +
geom_text(aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count",
vjust = -0.25) +
scale_y_continuous(labels = scales::percent) +
theme(legend.title = element_blank(),
legend.position = 'bottom',
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.x = element_blank()) +
ggtitle("How would you describe the severity of symptoms of your oldest child with NF1?") +
ylab("Proportion")
result <- table(grand.data$how_would_you_describe_the_severity_of_symptoms_of_your_.oldest._child_with_nf1.)
knitr::kable(result,
caption = "How would you describe the severity of symptoms of your oldest child with NF1?",
col.names = c('Response \t','Count'))
colnames(grand.data)
grand.data[266]
grand.data[266,]
dim(grand.data)
age.range
grand.data$mode_of_inheritance
